@using TaskNetic.Components.Pages

<div class="col-lg-3 col-md-4 col-sm-6">
    <div class="project-card card @(IsCreateCard ? "create-card" : "")" @onclick="HandleClick">
        <div class="card-body position-relative">
            @if (!IsCreateCard)
            {
                <img src="images/edit.svg"
                     class="edit-icon"
                     alt="Edit Project"
                     @onclick="HandleEditClick" @onclick:stopPropagation />
            }
            @if (IsCreateCard)
            {
                <div class="d-flex flex-column align-items-center justify-content-center h-100">
                    <h5 class="mt-2">Create project</h5>
                    <img src="images/plus.svg" width="30" height="30" />
                </div>
            }
            else if (!string.IsNullOrEmpty(BackgroundId))
            {
                <img src="images/backgrounds/background@(BackgroundId).jpg" class="card-img" alt="@Title">
                <div class="card-overlay">
                    <h5 class="card-title">@Title</h5>
                </div>
            }
            else
            {
                <div class="card-gradient">
                    <h5 class="card-title">@Title</h5>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? BackgroundId  { get; set; }

    [Parameter]
    public string Title { get; set; } = string.Empty;

    [Parameter]
    public bool IsCreateCard { get; set; }

    [Parameter]
    public EventCallback OnClick { get; set; }

    [Parameter]
    public EventCallback OnEditClick { get; set; }

    private async Task HandleClick()
    {
        await OnClick.InvokeAsync();
    }

    private async Task HandleEditClick()
    {
        await OnEditClick.InvokeAsync();
    }
}

<style>
    .project-card {
        transition: transform 0.3s ease-in-out;
        cursor: pointer;
        border: none;
        border-radius: 10px;
        overflow: hidden;
        aspect-ratio: 16/9;
        width: 100%;
        max-width: 320px;
        margin: 0 auto;
    }

    .project-card:hover {
        transform: translateY(-5px);
    }

    .card-body {
        padding: 0;
        height: 100%;
    }

    .card-img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .card-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        padding: 1rem;
        background: linear-gradient(transparent, rgba(0,0,0,0.7));
        color: white;
    }

    .card-gradient {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, #00c6ff, #7a2fff);
        display: flex;
        align-items: flex-end;
        padding: 1rem;
    }

    .create-card {
        background-color: white;
        border: 2px dashed #dee2e6;
        color: #6c757d;
        transition: all 0.3s ease;
    }

    .create-card:hover {
        border-color: #0d6efd;
        color: #0d6efd;
    }

    .card-title {
        margin: 0;
        color: white;
        font-size: 1rem;
    }

    .create-card h5 {
        color: inherit;
        font-size: 1rem;
    }

    .edit-icon {
        position: absolute;
        top: 10px;
        right: 10px;
        width: 24px;
        height: 24px;
        cursor: pointer;
        opacity: 0.7;
        z-index: 1;
    }

    .project-card:hover .edit-icon {
        opacity: 1;
    }


</style>
